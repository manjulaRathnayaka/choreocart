openapi: 3.0.0
info:
  title: Order Service API
  description: API for managing orders in ChoreoCart application
  version: 1.0.0
servers:
  - url: /
paths:
  /orders:
    get:
      summary: Get all orders
      description: Retrieves all orders placed
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create new order
      description: Creates a new order from cart items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartItem'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order:
    post:
      summary: Create new order (alternative endpoint)
      description: Creates a new order from cart items (alternative endpoint)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartItem'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{orderId}:
    get:
      summary: Get order by ID
      description: Retrieves a specific order by its ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update order status
      description: Updates the status of a specific order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, completed, cancelled]
              required:
                - status
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
components:
  schemas:
    CartItem:
      type: object
      properties:
        id:
          type: integer
          description: Product ID
        name:
          type: string
          description: Product name
        price:
          type: number
          format: float
          description: Product price
        quantity:
          type: integer
          description: Quantity of the item
          default: 1
        category:
          type: string
          description: Product category
        description:
          type: string
          description: Product description
      required:
        - id
        - name
        - price
    Order:
      type: object
      properties:
        id:
          type: string
          description: Order unique identifier
        items:
          type: array
          description: Products in the order
          items:
            $ref: '#/components/schemas/CartItem'
        totalAmount:
          type: number
          format: float
          description: Total order amount
        status:
          type: string
          description: Current order status
          enum: [pending, completed, cancelled]
        createdAt:
          type: string
          format: date-time
          description: Order creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last order update timestamp
      required:
        - id
        - items
        - totalAmount
        - status
        - createdAt
        - updatedAt
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error